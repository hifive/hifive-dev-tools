<?xml version="1.0" encoding="UTF-8"?>
<project name="h5devtool-builder" basedir="." default="build">
	<property name="webcontent.dir" value="WebContent" />
	<property name="src.dir" value="${webcontent.dir}/src" />
	<property name="src.filename" value="h5-dev-tool.js" />
	<property name="src.supplement.html.filename" value="h5-dev-tool.html" />
	<property name="build.dir" value="${webcontent.dir}/build" />
	<property name="build.tmp.dir" value="${build.tmp.dir}" />
	<property name="build.dev.filename" value="h5-dev-tool.dev.js" />
	<property name="build.min.filename" value="h5-dev-tool.js" />
	<property name="build.supplement.html.filename" value="h5-dev-tool.html" />
	<property name="min.header.filename" value="min-build-header.txt" />
	<property name="config.dir" value="config" />

	<property name="lib.project.dir" value="./lib" />

	<path id="base.path">
		<fileset dir="${lib.project.dir}" includes="**/*.jar" />
	</path>

	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpathref="base.path" />

	<target name="clean">
		<delete>
			<fileset dir="${build.dir}/">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<target name="getVersion" unless="versionNumber">
		<input message="バージョン番号を入力してください。(ex. 1.0.1)" addproperty="versionNumber" />
		<condition property="isCorrectNumber">
			<matches pattern="[0-9]+\.[0-9]+\.[0-9]+" string="${versionNumber}" />
		</condition>
		<fail unless="isCorrectNumber" message="正しいバージョン番号を入力してください。" />
	</target>

	<target name="getGitHash">
		<property name="git.dir" value="../.git/logs/HEAD" />
		<available file="${git.dir}" property="git.exists" />
		<fail unless="git.exists" message="${git.dir}が存在しません" />
		<loadfile srcfile="${git.dir}" property="gitCommitId">
			<filterchain>
				<tailfilter lines="1" />
				<striplinebreaks />
				<replaceregex pattern="[A-z0-9]+ ([A-z0-9]+) .*" replace="\1" />
			</filterchain>
		</loadfile>
		<echo message="gitCommitId: ${gitCommitId}" />
	</target>

	<target name="build" depends="clean,getVersion,getGitHash">
		<!-- タイムスタンプを取得 -->
		<tstamp>
			<format property="timestamp" pattern="yyyy/MM/dd HH:mm:ss.SSS (Z)" />
		</tstamp>
		<!-- dev版をbuild.tmp.dirにコピー -->
		<copy file="${src.dir}/${src.filename}" todir="${build.tmp.dir}" />
		<!-- version、gitCommitId, タイムスタンプを挿入 -->
		<replace file="${build.tmp.dir}/${src.filename}">
			<replacefilter token="{version}" value="${versionNumber}" />
			<replacefilter token="{gitCommitId}" value="${gitCommitId}" />
			<replacefilter token="{timestamp}" value="${timestamp}" />
		</replace>

		<!-- dev版をbuildに出力 -->
		<copy file="${build.tmp.dir}/${src.filename}" tofile="${build.dir}/${build.dev.filename}" />

		<!-- ClosureCompilerを使ってmin版の作成。コンパイル後にヘッダ追記するので、build.tmp.dirにいったん出力する -->
		<jscomp compilationLevel="simple" debug="false" output="${build.tmp.dir}/${build.min.filename}">
			<sources dir="${build.tmp.dir}">
				<file name="${src.filename}" />
			</sources>
		</jscomp>
		<!-- min版のヘッダ挿入 -->
		<!-- ヘッダにversion, gitCommitIdのセット -->
		<copy file="${config.dir}/${min.header.filename}" todir="${build.tmp.dir}" />
		<replace file="${build.tmp.dir}/${min.header.filename}">
			<replacefilter token="{version}" value="${versionNumber}" />
			<replacefilter token="{gitCommitId}" value="${gitCommitId}" />
		</replace>
		<!-- ヘッダとソースを結合してbuildに出力 -->
		<concat destfile="${build.dir}/${build.min.filename}">
			<filelist dir="${build.tmp.dir}" files="${min.header.filename},${build.min.filename}" />
		</concat>

		<!-- htmlファイルをbuildに出力 -->
		<copy file="${src.dir}/${src.supplement.html.filename}" tofile="${build.dir}/${build.supplement.html.filename}" />

		<!-- tmpフォルダの削除 -->
		<delete dir="${build.tmp.dir}" />

		<property name="output.dir" location="${build.dir}" />
		<echo message="ビルドしたファイルを${output.dir}に出力しました。" />
	</target>

	<target name="setHeadVersion">
		<property name="versionNumber" value="0.0.0" />
	</target>

	<target name="build-head" depends="setHeadVersion, build">

	</target>
</project>